# Created by .ignore support plugin (hsz.mobi)
### Python template
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
.gitignore
#notebooks/
src/bin/__pycache__/
# C extensions
*.so
notebooks/SAP delivery notes.ipynb
src/bin/Output.csv
src/bin/__pycache__/*.pyc
src/bin/__pycache__/dmr.cpython-37.pyc
# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

### Example user template template
### Example user template

# IntelliJ project files
.idea
*.iml
out
gen
.gitignore
.idea/.gitignore
.idea/RTS.iml
.idea/copyright/
.idea/encodings.xml
.idea/inspectionProfiles/
.idea/misc.xml
.idea/modules.xml
.idea/rGraphicsSettings.xml
.idea/rSettings.xml
.idea/rpackages.xml
.idea/vcs.xml
Platform.xlsx
Retail/
arpr_with_coordinates.csv
combn_matrix2.csv
data/GPS_Data/
data/Miscellaneous_Data/
data/SAP_Data/
data/Sales & Inventory/Proposed Delivery Calculation_StevenLogic.xlsx
data/data/
#data/dmr/
data/dqm/
data/rate/
data/Output_Data
docs/
mco_data/
ppt materials/
rough.py
src/__init__.py
src/bin/models/MILP_Output.csv
src/bin/models/__init__.py
src/bin/models/matrix.p
src/bin/models/model2.lp
src/postprocessing/
src/preprocessing/
src/tsp.txt
src/bin/DMR+1 for test 2.csv
src/bin/model.txt
src/bin/model2.lp
src/bin/models/model.txt
data/Output_Data/milp
RTS.zip
db.env
launch.json